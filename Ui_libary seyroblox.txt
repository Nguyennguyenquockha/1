local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local KhaUI = {}
KhaUI.__index = KhaUI

local Themes = {
    Dark = {
        Background = Color3.fromRGB(25, 25, 25),
        Accent = Color3.fromRGB(45, 45, 45),
        Text = Color3.fromRGB(255, 255, 255)
    },
    Blue = {
        Background = Color3.fromRGB(20, 20, 35),
        Accent = Color3.fromRGB(50, 50, 80),
        Text = Color3.fromRGB(180, 220, 255)
    }
}

local currentTheme = Themes.Dark

local function create(class, props)
    local inst = Instance.new(class)
    for i, v in pairs(props) do
        inst[i] = v
    end
    return inst
end

function KhaUI:CreateWindow(title)
    local Screen = create("ScreenGui", {Name = "KhaUILib", Parent = CoreGui, ResetOnSpawn = false})

    local MainFrame = create("Frame", {
        Size = UDim2.new(0, 400, 0, 300),
        Position = UDim2.new(0.5, -200, 0.5, -150),
        BackgroundColor3 = currentTheme.Background,
        BorderSizePixel = 0,
        Parent = Screen
    })
    create("UICorner", {CornerRadius = UDim.new(0, 10), Parent = MainFrame})

    local Title = create("TextLabel", {
        Text = title,
        Size = UDim2.new(1, -40, 0, 30),
        Position = UDim2.new(0, 10, 0, 5),
        BackgroundTransparency = 1,
        TextColor3 = currentTheme.Text,
        Font = Enum.Font.GothamBold,
        TextSize = 18,
        TextXAlignment = Enum.TextXAlignment.Left,
        Parent = MainFrame
    })

    local CloseBtn = create("TextButton", {
        Text = "✕", Size = UDim2.new(0, 30, 0, 30),
        Position = UDim2.new(1, -35, 0, 5),
        BackgroundColor3 = currentTheme.Accent,
        TextColor3 = currentTheme.Text,
        Parent = MainFrame
    })
    create("UICorner", {CornerRadius = UDim.new(0, 8), Parent = CloseBtn})

    local Prompt = create("Frame", {
        Size = UDim2.new(0, 200, 0, 100),
        Position = UDim2.new(0.5, -100, 0.5, -50),
        BackgroundColor3 = currentTheme.Accent,
        Visible = false,
        Parent = MainFrame
    })
    create("UICorner", {Parent = Prompt})
    create("TextLabel", {
        Text = "Bạn có muốn tắt UI này?", Size = UDim2.new(1, 0, 0, 40),
        BackgroundTransparency = 1, TextColor3 = currentTheme.Text,
        Parent = Prompt
    })
    local OK = create("TextButton", {Text = "OK", Position = UDim2.new(0, 10, 0, 50), Size = UDim2.new(0, 80, 0, 30), BackgroundColor3 = Color3.fromRGB(70, 200, 100), Parent = Prompt})
    local Cancel = create("TextButton", {Text = "Cancel", Position = UDim2.new(1, -90, 0, 50), Size = UDim2.new(0, 80, 0, 30), BackgroundColor3 = Color3.fromRGB(200, 70, 70), Parent = Prompt})
    create("UICorner", {Parent = OK}) create("UICorner", {Parent = Cancel})

    CloseBtn.MouseButton1Click:Connect(function()
        Prompt.Visible = true
    end)

    OK.MouseButton1Click:Connect(function()
        Screen:Destroy()
    end)
    Cancel.MouseButton1Click:Connect(function()
        Prompt.Visible = false
    end)

    local TabsFrame = create("Frame", {
        Size = UDim2.new(0, 100, 1, -40),
        Position = UDim2.new(0, 0, 0, 40),
        BackgroundColor3 = currentTheme.Accent,
        Parent = MainFrame
    })
    create("UICorner", {Parent = TabsFrame})

    local ContentFrame = create("Frame", {
        Size = UDim2.new(1, -110, 1, -40),
        Position = UDim2.new(0, 110, 0, 40),
        BackgroundColor3 = currentTheme.Accent,
        Parent = MainFrame
    })
    create("UICorner", {Parent = ContentFrame})

    local Tabs = {}
    function Tabs:AddTab(name)
        local TabBtn = create("TextButton", {
            Text = name,
            Size = UDim2.new(1, -10, 0, 30),
            Position = UDim2.new(0, 5, 0, #Tabs * 35),
            BackgroundColor3 = currentTheme.Background,
            TextColor3 = currentTheme.Text,
            Parent = TabsFrame
        })
        create("UICorner", {Parent = TabBtn})

        local TabContent = create("Frame", {
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Visible = false,
            Parent = ContentFrame
        })

        TabBtn.MouseButton1Click:Connect(function()
            for _, f in ipairs(ContentFrame:GetChildren()) do
                if f:IsA("Frame") then f.Visible = false end
            end
            TabContent.Visible = true
        end)

        table.insert(Tabs, TabBtn)

        local API = {}

        function API:AddButton(text, callback)
            local btn = create("TextButton", {
                Text = text, Size = UDim2.new(1, -20, 0, 30),
                Position = UDim2.new(0, 10, 0, #TabContent:GetChildren() * 35),
                BackgroundColor3 = currentTheme.Background,
                TextColor3 = currentTheme.Text,
                Parent = TabContent
            })
            create("UICorner", {Parent = btn})
            btn.MouseButton1Click:Connect(callback)
        end

        function API:AddSlider(name, min, max, default, callback)
            local slider = create("TextButton", {
                Text = name .. ": " .. tostring(default),
                Size = UDim2.new(1, -20, 0, 30),
                Position = UDim2.new(0, 10, 0, #TabContent:GetChildren() * 35),
                BackgroundColor3 = currentTheme.Background,
                TextColor3 = currentTheme.Text,
                Parent = TabContent
            })
            create("UICorner", {Parent = slider})

            slider.MouseButton1Click:Connect(function()
                default = (default + 1 > max) and min or default + 1
                slider.Text = name .. ": " .. tostring(default)
                callback(default)
            end)
        end

        function API:AddToggle(name, default, callback)
            local state = default
            local toggle = create("TextButton", {
                Text = name .. ": " .. tostring(state),
                Size = UDim2.new(1, -20, 0, 30),
                Position = UDim2.new(0, 10, 0, #TabContent:GetChildren() * 35),
                BackgroundColor3 = currentTheme.Background,
                TextColor3 = currentTheme.Text,
                Parent = TabContent
            })
            create("UICorner", {Parent = toggle})
            toggle.MouseButton1Click:Connect(function()
                state = not state
                toggle.Text = name .. ": " .. tostring(state)
                callback(state)
            end)
        end

        function API:AddDropdown(name, list, callback)
            local selected = list[1] or ""
            local dropdown = create("TextButton", {
                Text = name .. ": " .. selected,
                Size = UDim2.new(1, -20, 0, 30),
                Position = UDim2.new(0, 10, 0, #TabContent:GetChildren() * 35),
                BackgroundColor3 = currentTheme.Background,
                TextColor3 = currentTheme.Text,
                Parent = TabContent
            })
            create("UICorner", {Parent = dropdown})

            dropdown.MouseButton1Click:Connect(function()
                selected = list[(table.find(list, selected) % #list) + 1]
                dropdown.Text = name .. ": " .. selected
                callback(selected)
            end)
        end

        function API:AddTextBox(name, callback)
            local box = create("TextBox", {
                Text = "", PlaceholderText = name,
                Size = UDim2.new(1, -20, 0, 30),
                Position = UDim2.new(0, 10, 0, #TabContent:GetChildren() * 35),
                BackgroundColor3 = currentTheme.Background,
                TextColor3 = currentTheme.Text,
                ClearTextOnFocus = false,
                Parent = TabContent
            })
            create("UICorner", {Parent = box})
            box.FocusLost:Connect(function()
                callback(box.Text)
            end)
        end

        function API:Notify(text)
            local notify = create("TextLabel", {
                Text = text,
                Size = UDim2.new(0, 250, 0, 40),
                BackgroundColor3 = currentTheme.Accent,
                TextColor3 = currentTheme.Text,
                Position = UDim2.new(0.5, -125, 0, -50),
                Parent = Screen
            })
            create("UICorner", {Parent = notify})
            TweenService:Create(notify, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -125, 0, 10)}):Play()
            task.delay(3, function()
                TweenService:Create(notify, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -125, 0, -50)}):Play()
                task.wait(0.5)
                notify:Destroy()
            end)
        end

        return API
    end

    return Tabs
end

return setmetatable({}, KhaUI)
