local Library = {}
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

local ScreenGui = Instance.new("ScreenGui", Player:WaitForChild("PlayerGui"))
ScreenGui.Name = "CuteUILib"
ScreenGui.ResetOnSpawn = false

local Main = Instance.new("Frame", ScreenGui)
Main.Size = UDim2.new(0, 520, 0, 330)
Main.Position = UDim2.new(0.5, -260, 0.5, -165)
Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Main.BorderSizePixel = 0
Main.AnchorPoint = Vector2.new(0.5, 0.5)

Instance.new("UICorner", Main).CornerRadius = UDim.new(0, 12)
local stroke = Instance.new("UIStroke", Main)
stroke.Color = Color3.fromRGB(90, 90, 255)
stroke.Thickness = 2

local TabHolder = Instance.new("Frame", Main)
TabHolder.Size = UDim2.new(0, 110, 1, 0)
TabHolder.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Instance.new("UICorner", TabHolder).CornerRadius = UDim.new(0, 10)
Instance.new("UIListLayout", TabHolder).Padding = UDim.new(0, 6)

local Content = Instance.new("Frame", Main)
Content.Position = UDim2.new(0, 110, 0, 0)
Content.Size = UDim2.new(1, -110, 1, 0)
Content.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Instance.new("UICorner", Content).CornerRadius = UDim.new(0, 10)

function Library:CreateTab(name)
	local tabBtn = Instance.new("TextButton", TabHolder)
	tabBtn.Size = UDim2.new(1, -10, 0, 40)
	tabBtn.Text = name
	tabBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	tabBtn.TextColor3 = Color3.new(1, 1, 1)
	tabBtn.BorderSizePixel = 0
	Instance.new("UICorner", tabBtn).CornerRadius = UDim.new(0, 6)

	local tabContent = Instance.new("ScrollingFrame", Content)
	tabContent.Size = UDim2.new(1, 0, 1, 0)
	tabContent.CanvasSize = UDim2.new(0, 0, 0, 500)
	tabContent.BackgroundTransparency = 1
	tabContent.ScrollBarThickness = 5
	tabContent.Visible = false
	Instance.new("UIListLayout", tabContent).Padding = UDim.new(0, 6)

	tabBtn.MouseButton1Click:Connect(function()
		for _, child in pairs(Content:GetChildren()) do
			if child:IsA("ScrollingFrame") then
				child.Visible = false
			end
		end
		tabContent.Visible = true
	end)

	if #Content:GetChildren() == 1 then
		tabContent.Visible = true
	end

	local Tab = {}

	function Tab:CreateButton(text, callback)
		local btn = Instance.new("TextButton", tabContent)
		btn.Size = UDim2.new(1, -10, 0, 30)
		btn.Text = text
		btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		btn.TextColor3 = Color3.new(1, 1, 1)
		btn.BorderSizePixel = 0
		Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
		btn.MouseButton1Click:Connect(callback)
	end

	function Tab:CreateToggle(text, callback)
		local state = false
		local toggle = Instance.new("TextButton", tabContent)
		toggle.Size = UDim2.new(1, -10, 0, 30)
		toggle.Text = text .. ": OFF"
		toggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
		toggle.TextColor3 = Color3.new(1, 1, 1)
		toggle.BorderSizePixel = 0
		Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 6)
		toggle.MouseButton1Click:Connect(function()
			state = not state
			toggle.Text = text .. ": " .. (state and "ON" or "OFF")
			callback(state)
		end)
	end

	function Tab:CreateDropdown(text, list, callback)
		local dropdown = Instance.new("TextButton", tabContent)
		dropdown.Size = UDim2.new(1, -10, 0, 30)
		dropdown.Text = text
		dropdown.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		dropdown.TextColor3 = Color3.new(1, 1, 1)
		Instance.new("UICorner", dropdown).CornerRadius = UDim.new(0, 6)

		local holder = Instance.new("Frame", tabContent)
		holder.Size = UDim2.new(1, -10, 0, #list * 30)
		holder.BackgroundTransparency = 1
		holder.Visible = false
		Instance.new("UIListLayout", holder)

		dropdown.MouseButton1Click:Connect(function()
			holder.Visible = not holder.Visible
		end)

		for _, item in pairs(list) do
			local opt = Instance.new("TextButton", holder)
			opt.Size = UDim2.new(1, 0, 0, 30)
			opt.Text = item
			opt.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			opt.TextColor3 = Color3.new(1, 1, 1)
			Instance.new("UICorner", opt).CornerRadius = UDim.new(0, 6)
			opt.MouseButton1Click:Connect(function()
				callback(item)
				holder.Visible = false
			end)
		end
	end

	function Tab:CreateSlider(text, min, max, default, callback)
		local label = Instance.new("TextLabel", tabContent)
		label.Size = UDim2.new(1, -10, 0, 30)
		label.Text = text .. ": " .. default
		label.BackgroundTransparency = 1
		label.TextColor3 = Color3.new(1, 1, 1)

		local slider = Instance.new("TextButton", tabContent)
		slider.Size = UDim2.new(1, -10, 0, 20)
		slider.Text = ""
		slider.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
		Instance.new("UICorner", slider).CornerRadius = UDim.new(0, 6)

		local dragging = false
		slider.MouseButton1Down:Connect(function()
			dragging = true
		end)

		Mouse.Move:Connect(function()
			if dragging then
				local x = math.clamp(Mouse.X - slider.AbsolutePosition.X, 0, slider.AbsoluteSize.X)
				local percent = x / slider.AbsoluteSize.X
				local value = math.floor(min + (max - min) * percent)
				label.Text = text .. ": " .. value
				callback(value)
			end
		end)

		Mouse.Button1Up:Connect(function()
			dragging = false
		end)
	end

	function Tab:CreateTextbox(placeholder, callback)
		local box = Instance.new("TextBox", tabContent)
		box.Size = UDim2.new(1, -10, 0, 30)
		box.PlaceholderText = placeholder
		box.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		box.TextColor3 = Color3.new(1, 1, 1)
		Instance.new("UICorner", box).CornerRadius = UDim.new(0, 6)
		box.FocusLost:Connect(function()
			callback(box.Text)
		end)
	end

	function Tab:CreateColorPicker(callback)
		local btn = Instance.new("TextButton", tabContent)
		btn.Size = UDim2.new(1, -10, 0, 30)
		btn.Text = "Pick Color"
		btn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		btn.TextColor3 = Color3.new(1, 1, 1)
		Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
		btn.MouseButton1Click:Connect(function()
			local color = Color3.fromHSV(math.random(), 1, 1)
			btn.BackgroundColor3 = color
			callback(color)
		end)
	end

	return Tab
end

return Library