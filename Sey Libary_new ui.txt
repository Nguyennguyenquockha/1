local Players = game:GetService("Players")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- UI Library Table
local Library = {}
local CurrentTab = nil

-- Create main UI
local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
ScreenGui.Name = "CustomUILibrary"
ScreenGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 500, 0, 300)
MainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0

-- Tab buttons holder
local TabHolder = Instance.new("Frame", MainFrame)
TabHolder.Size = UDim2.new(0, 100, 1, 0)
TabHolder.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TabHolder.BorderSizePixel = 0

-- Content holder
local ContentHolder = Instance.new("Frame", MainFrame)
ContentHolder.Size = UDim2.new(1, -100, 1, 0)
ContentHolder.Position = UDim2.new(0, 100, 0, 0)
ContentHolder.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
ContentHolder.BorderSizePixel = 0

function Library:CreateTab(name)
	local TabButton = Instance.new("TextButton", TabHolder)
	TabButton.Size = UDim2.new(1, 0, 0, 40)
	TabButton.Text = name
	TabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	TabButton.BorderSizePixel = 0

	local TabContent = Instance.new("ScrollingFrame", ContentHolder)
	TabContent.Name = name
	TabContent.Size = UDim2.new(1, 0, 1, 0)
	TabContent.CanvasSize = UDim2.new(0, 0, 0, 500)
	TabContent.BackgroundTransparency = 1
	TabContent.Visible = false
	TabContent.ScrollBarThickness = 5

	TabButton.MouseButton1Click:Connect(function()
		for _, tab in pairs(ContentHolder:GetChildren()) do
			if tab:IsA("ScrollingFrame") then
				tab.Visible = false
			end
		end
		TabContent.Visible = true
		CurrentTab = TabContent
	end)

	if not CurrentTab then
		TabContent.Visible = true
		CurrentTab = TabContent
	end

	local layout = Instance.new("UIListLayout", TabContent)
	layout.Padding = UDim.new(0, 6)

	local tabAPI = {}

	function tabAPI:CreateButton(text, callback)
		local btn = Instance.new("TextButton", TabContent)
		btn.Size = UDim2.new(1, -10, 0, 30)
		btn.Text = text
		btn.TextColor3 = Color3.new(1, 1, 1)
		btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		btn.MouseButton1Click:Connect(callback)
	end

	function tabAPI:CreateToggle(text, callback)
		local toggle = Instance.new("TextButton", TabContent)
		toggle.Size = UDim2.new(1, -10, 0, 30)
		toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		toggle.TextColor3 = Color3.new(1, 1, 1)
		toggle.Text = text .. ": OFF"
		local state = false

		toggle.MouseButton1Click:Connect(function()
			state = not state
			toggle.Text = text .. ": " .. (state and "ON" or "OFF")
			callback(state)
		end)
	end

	function tabAPI:CreateDropdown(text, items, callback)
		local drop = Instance.new("TextButton", TabContent)
		drop.Size = UDim2.new(1, -10, 0, 30)
		drop.Text = text
		drop.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		drop.TextColor3 = Color3.new(1, 1, 1)

		local dropdown = Instance.new("Frame", TabContent)
		dropdown.Size = UDim2.new(1, -10, 0, #items * 30)
		dropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		dropdown.Visible = false

		local layout = Instance.new("UIListLayout", dropdown)

		drop.MouseButton1Click:Connect(function()
			dropdown.Visible = not dropdown.Visible
		end)

		for _, item in pairs(items) do
			local opt = Instance.new("TextButton", dropdown)
			opt.Size = UDim2.new(1, 0, 0, 30)
			opt.Text = item
			opt.TextColor3 = Color3.new(1, 1, 1)
			opt.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			opt.MouseButton1Click:Connect(function()
				callback(item)
				dropdown.Visible = false
			end)
		end
	end

	function tabAPI:CreateSlider(text, min, max, default, callback)
		local sliderFrame = Instance.new("Frame", TabContent)
		sliderFrame.Size = UDim2.new(1, -10, 0, 40)
		sliderFrame.BackgroundTransparency = 1

		local label = Instance.new("TextLabel", sliderFrame)
		label.Size = UDim2.new(1, 0, 0.5, 0)
		label.Text = text .. ": " .. default
		label.BackgroundTransparency = 1
		label.TextColor3 = Color3.new(1, 1, 1)

		local slider = Instance.new("TextButton", sliderFrame)
		slider.Position = UDim2.new(0, 0, 0.5, 0)
		slider.Size = UDim2.new(1, 0, 0.5, 0)
		slider.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
		slider.Text = ""

		local value = default
		local dragging = false

		slider.MouseButton1Down:Connect(function()
			dragging = true
		end)

		mouse.Move:Connect(function()
			if dragging then
				local x = math.clamp(mouse.X - slider.AbsolutePosition.X, 0, slider.AbsoluteSize.X)
				local percent = x / slider.AbsoluteSize.X
				value = math.floor(min + (max - min) * percent)
				label.Text = text .. ": " .. value
				callback(value)
			end
		end)

		mouse.Button1Up:Connect(function()
			dragging = false
		end)
	end

	function tabAPI:CreateTextbox(placeholder, callback)
		local box = Instance.new("TextBox", TabContent)
		box.Size = UDim2.new(1, -10, 0, 30)
		box.PlaceholderText = placeholder
		box.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		box.TextColor3 = Color3.new(1, 1, 1)
		box.FocusLost:Connect(function()
			callback(box.Text)
		end)
	end

	function tabAPI:CreateColorPicker(callback)
		local btn = Instance.new("TextButton", TabContent)
		btn.Size = UDim2.new(1, -10, 0, 30)
		btn.Text = "Pick Color"
		btn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		btn.TextColor3 = Color3.new(1, 1, 1)

		btn.MouseButton1Click:Connect(function()
			local color = Color3.fromHSV(math.random(), 1, 1)
			btn.BackgroundColor3 = color
			callback(color)
		end)
	end

	return tabAPI
end

return Library